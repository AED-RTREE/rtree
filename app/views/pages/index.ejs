<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
</head>
<body style="background: #eeeefe;"> 
  <div>
    <div style="float: left;" id="myDiv">
      <canvas id="myRec" width="854" height="480" style="border:1px solid #d3d3d3;"></canvas>   
    </div>
    <div style="position: relative; left: 50px; ">
      <h1>R-Tree Demo</h1><h2>UCSP</h2>
      <button onclick="fndiv1()">Draw</button>
      <div id="div1" style="display: none;">
        <form name="radForm">
          <input type="radio" value="poligono" name="radioButtons" onclick="radfn(this)" checked/>
          <label>polygon</label>
          <input type="radio" value="point" name="radioButtons" onclick="radfn(this)">
          <label>point</label>    
        </form>
        <p  style="float: left;position: relative; left: 5px; ">(x,y): (<span id="Xval"></span></p><p style="float: left; position: relative; left: 5px;">,</p><p style="position: relative; left: 5px;"><span id="Yval"></span>)</p>
        <p id="mousepoint" style="position: relative; left: 5px;"></p>        
      </div><br>
      <button onclick="fndiv2()">Search</button>
      <div id="div2" style="display: none; position: relative; left: 10px; ">
        <p id="rect-search"></p>
      </div><br>
      <button onclick="fndiv3()">K-Nearest</button>
      <div id="div3" style="display: none; position: relative; left: 10px; "><br>
        <input type="number" min="0" value="0" placeholder="0" id="myk"/>
        <button onclick="searchfn()">Set</button>   
        <p id="knearst-text"></p>
      </div><br>
      <button onclick="clearfn()">Delete All</button>     
    </div>    
  </div>
<script>


var c = document.getElementById("myRec");
var mydiv = document.getElementById("myDiv");
var ctx = c.getContext("2d");

ctx.lineWidth=1.5;

ctx.fillStyle = "rgba(170,170,187,0.5)";
ctx.font = "10px Arial"

var polygons = [];
var polygon  = []; 
var points   = [];
var npoint = [];
var downflag = false;
var xmov = 1000;
var ymov = 1000;
var poln = 0;
var xini = 0;
var yini = 0;
var xcur = 0;
var ycur = 0;
var newpoly = false;
var fig = "poligono";

var recsrc = [];
var old_recsrc;
var drawflag = false;
var search = false;
var nearestflag = false;
var r1;
var r2;
var r3;
var r4;
var k = 0;

var data_to_send="";
var data_to_rcv="";

var data_rect="";
var data_knrt="";
document.getElementById("Xval").innerHTML = "";
document.getElementById("Yval").innerHTML = "";


function send_fig(){
  data_to_send="";
  n_poly = polygons.length;
  n_point = points.length;

  if (n_poly > 0 || n_point > 0){
    

    if (n_poly > 0){
      data_to_send += "|l|" + n_poly + "|";
      for (var idx_poly = 0; idx_poly < n_poly; idx_poly++) {
        i_poly = polygons[idx_poly];
        n_poly_unit = i_poly.length - 2;
        data_to_send += n_poly_unit+'|';
        for (var px = 0 ; px < n_poly_unit; px++) {
          data_to_send += i_poly[px] + "|";
        }
      }     
    }
    if (n_point > 0){
      data_to_send += "|p|" + n_point + "|";
      for (var idx_point = 0; idx_point < n_point; idx_point++) {
        data_to_send += points[idx_point]+"|";
      }       
    }

  }
  console.log(data_to_send);
}

function send_rect(var1,var2,var3,var4){
  data_rect = "|s|"+var1+"|"+var2+"|"+var3+"|"+var4+"|";
  console.log(data_rect); 
}

function send_knearest(pt1,pt2,kval){
  data_knrt='|k|'+kval+'|'+pt1+'|'+pt2+'|';
  console.log(data_knrt);
}

function draw(){
  ctx.clearRect(0,0,854,480);
  if (polygons.length > 0){
    ctx.strokeStyle="red";
    for (var poli = 0 ; poli < polygons.length ; poli++) {
      var plot = polygons[poli];
      ctx.beginPath();
      if (plot.length == 2){
        ctx.rect(plot[0],plot[1],1.3,1.3);
        ctx.stroke();
      }
      else{
        ctx.moveTo(plot[0], plot[1]);
        for (var i = 2; i < plot.length - 1; i+=2) {
          ctx.lineTo(plot[i],plot[i+1]);
        }
        ctx.fill();
        ctx.stroke();
      }   
    }   
  }

  if (points.length > 0){
    ctx.strokeStyle="red";
    ctx.beginPath();
    for (var pi = 0; pi < points.length - 1; pi+=2) {
      ctx.rect(points[pi],points[pi+1],1.3,1.3);
      ctx.stroke();
    }     
  }

  if (nearestflag == true && npoint.length > 0){
    ctx.strokeStyle="black";
    ctx.beginPath();
    ctx.rect(npoint[0],npoint[1],1.3,1.3);
    ctx.stroke();
    if (downflag == true){
      if(isInt(k)){
        if(k>=0){
          send_knearest(npoint[0],npoint[1],k);
        }
      } 
    }
    var knearest_text = "location : ("+npoint[0]+","+npoint[1]+") | k = "+k;
    document.getElementById("knearst-text").innerHTML = knearest_text;
  }

  if (recsrc[0] == 1 && search == true && recsrc.length>0){
    ctx.strokeStyle="#01DF74";
    ctx.beginPath();
    r1 = recsrc[1];
    r2 = recsrc[2];
    r3 = recsrc[3];
    r4 = recsrc[4];
    if (recsrc[1] > recsrc[3]){
      r3 = recsrc[1];
      r1 = recsrc[3];
    }
    if (recsrc[2] > recsrc[4]){
      r4 = recsrc[2];
      r2 = recsrc[4];
    }

    if (downflag == true){
      send_rect(r1,r2,r3,r4);
    }
    
    var rectsearch = "rect: [("+r1+","+r2+"),("+r3+","+r4+")]";
    document.getElementById("rect-search").innerHTML = rectsearch;
    ctx.rect(r1,r2,r3-r1,r4-r2);
    ctx.stroke();
    
    //ctx.rect(recsrc[1],recsrc[2],recsrc[3]-recsrc[1],recsrc[4]-recsrc[2]);
  }

}

function clearfn(){
  polygons = [0];
  polygon = [];
  points = [];
  newpoly = true;
  poln = 0;
  npoint = [];
  rectscr = [];
  rectscr[0] = 0;
  console.log("clearfn");
  ctx.clearRect(0,0,854,480);
}

function isInt(num){
  if (isNaN(num)){
    return false;
  }
  var rval = parseFloat(num);
  return (rval | 0) === rval;
}

function searchfn(myk){
  closepolygon();
  var temp = document.getElementById("myk").value;
  if (isInt(temp)){
    if (temp>=0){
      k = temp;
      send_knearest(npoint[0],npoint[1],k);
    }
    else{
      k = "invalid number!";
    } 
  }
  else{
    k = "we need a integer number! ";
  }
  draw();
}

function closepolygon(){
  if (polygons.length > 0){
    var last = polygons.length-1;
    var lastpol = polygons[last];
    if (lastpol[0]!= lastpol[lastpol.length-2] || lastpol[1]!=lastpol[lastpol.length-1]){
      lastpol = lastpol.concat([lastpol[0],lastpol[1]]);
      polygons[last] = lastpol;
      polygon = [];
      poln = poln + 1;
    }     
  }
}

function radfn(myradio){
  fig = myradio.value;
  if (fig == "point"){
    closepolygon();
  }
}

function plotfig(event){
  ctx.clearRect(0,0,854,480);
  if (drawflag == true){
    recsrc[0] = 0;
    xcur = event.clientX - 10;
    ycur = event.clientY - 23;

    if (fig == "point"){
      if (xcur < 854 && xcur >= 0 && ycur < 480 && ycur >= 0){
        points = points.concat([xcur, ycur]);
        send_fig()
        document.getElementById("Xval").innerHTML = xcur;
        document.getElementById("Yval").innerHTML = ycur;
      }
    }

    else if (fig == "poligono"){
      if (xcur < 854 && xcur >= 0 && ycur < 480 && ycur >= 0){
        if (polygon.length > 4) {
          if (Math.pow(polygon[0]-xcur,2)+Math.pow(polygon[1]-ycur,2)<100){
            xcur = polygon[0];
            ycur = polygon[1];
            newpoly = true; 
          }
        }

        polygon = polygon.concat([xcur, ycur]);
        polygons[poln] = polygon;
        document.getElementById("Xval").innerHTML = xcur;
        document.getElementById("Yval").innerHTML = ycur;
        xini = xcur;
        yini = ycur;
      }
    }

    
    if (newpoly == true){
      polygon = [];
      newpoly = false;
      poln = poln + 1;  
      send_fig();

    }
  }

  draw();
}

function fndiv1(){
  var d1 = document.getElementById("div1");
  var d2 = document.getElementById("div2");
  var d3 = document.getElementById("div3");

  if (d1.style.display == "none"){
    d1.style.display = "block";
    d2.style.display = "none";
    d3.style.display = "none";
    drawflag = true;
    search = false;
    nearestflag = false;
  }
  else {
    d1.style.display = "none";
    drawflag = false;
  }
}

function fndiv2(){
  var d1 = document.getElementById("div1");
  var d2 = document.getElementById("div2");
  var d3 = document.getElementById("div3");

  if (d2.style.display == "none"){
    d2.style.display = "block";
    d1.style.display = "none";
    d3.style.display = "none";
    search = true;
    drawflag = false;
    nearestflag = false;
    closepolygon();
  }
  else {
    d2.style.display = "none";
    search = false;
  }
}

function fndiv3(){
  var d1 = document.getElementById("div1");
  var d2 = document.getElementById("div2");
  var d3 = document.getElementById("div3");

  if (d3.style.display == "none"){
    d3.style.display = "block";
    d1.style.display = "none";
    d2.style.display = "none";
    nearestflag = true;
    drawflag = false;
    search = false;
  }
  else {
    d3.style.display = "none";
  }
}

function mousemovefn(event){
  

  xmov = event.clientX -10;
  ymov = event.clientY -23;

  if (search == true){
    if (xmov < 854 && xmov >= 0 && ymov < 480 && ymov >= 0){
      if (downflag == true){        
        recsrc[3] = xmov;
        recsrc[4] = ymov;
      }     
    } 
  }
  
  if (xmov < 854 && xmov >= 0 && ymov < 480 && ymov >= 0){
    if (xmov < 430 && ymov < 240) {
      coor = "mouse : (" + xmov + "," + ymov + ")";
      document.getElementById("mousepoint").innerHTML = coor;
    }
    else if (xmov < 430 && ymov > 240) {
      coor = "mouse : (" + xmov + "," + ymov + ")";
      document.getElementById("mousepoint").innerHTML = coor;
    }
    else if (xmov > 430 && ymov < 240) {
      coor = "mouse : (" + xmov + "," + ymov + ")";
      document.getElementById("mousepoint").innerHTML = coor;
    }
    else {
      coor = "mouse : (" + xmov + "," + ymov + ")";
      document.getElementById("mousepoint").innerHTML = coor;
    }
  }
  draw(); 
}

function mousedownfn(event){
  xdown = event.clientX -10;
  ydown = event.clientY -23;    
  downflag = true;
  if (search == true){
    if (xdown < 854 && xdown >= 0 && ydown < 480 && ydown >= 0){
      recsrc[0] = 1;
      recsrc[1] = xdown;
      recsrc[2] = ydown;
      recsrc[3] = xdown;
      recsrc[4] = ydown;      
    }
  }
  if (nearestflag == true ){
    if (xdown < 854 && xdown >= 0 && ydown < 480 && ydown >= 0){
      npoint[0]=xdown;
      npoint[1]=ydown;
    }
  }
  plotfig(event);
}

function mouseupfn(event){
  downflag = false;
  if (search == true){
    xup = event.clientX -10;
    yup = event.clientY -23;
    if (xup < 854 && xup >= 0 && yup < 480 && yup >= 0){
      recsrc[3] = xup;
      recsrc[4] = yup;      
    }
  }
}

document.radForm.radioButtons[0].checked=true;
document.addEventListener("mousedown", mousedownfn);
document.addEventListener("mouseup", mouseupfn);
document.addEventListener("mousemove", mousemovefn);

</script> 
</body>
</html>